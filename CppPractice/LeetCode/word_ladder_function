//please try yourself once

class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
      unordered_set<string>s;
      for(int i=0;i<wordList.size();i++)
      s.insert(wordList[i]);

      if(s.count(endWord)==0)
      return 0;


      queue<string>q;
      int ladder=1;
      q.push(beginWord);
      s.erase(beginWord);
      while (!q.empty())
      {
        int n=q.size();
        while(n--)
        {
            string str=q.front();
            q.pop();
            if(str==endWord)
            {
                return ladder;
            }

            for(int i=0;i<str.length();i++)
            {
                char a=str[i];
                for(char ch='a';ch<='z';ch++)
                {
                    str[i]=ch;
                    if(s.count(str)==0)continue;

                    q.push(str);
                    s.erase(str);
                }

                str[i]=a;
            }
        }

        ladder++;
      }
      return 0;
    }
};
